{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Visma eAccounting API V1"
  },
  "host": "eaccountingapi.vismaonline.com/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/accountbalances/{date}": {
      "get": {
        "tags": [
          "AccountBalance"
        ],
        "summary": "Get Account balance on a specific date (yyyy-MM-dd). Filter to include accounts where balance is 0.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo</b></p>",
        "operationId": "AccountBalance_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Format: yyyy-MM-dd",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "includeZeroBalance",
            "in": "query",
            "description": "Default value: false",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountBalance"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accountbalances/{accountNumber}/{date}": {
      "get": {
        "tags": [
          "AccountBalance"
        ],
        "summary": "Get Account Balance on a specific account and date.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo</b></p>",
        "operationId": "AccountBalance_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "date",
            "in": "path",
            "description": "Format: yyyy-MM-dd",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountBalance"
            }
          }
        },
        "deprecated": false
      }
    },
    "/accounts/{fiscalyearId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get a list of accounts",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "Accounts_ListByFiscalYear",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fiscalyearId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "changedFromDate",
            "in": "query",
            "description": "Only include changed accounts from date (yyyy-MM-dd) or date(yyyy-MM-dd hh:mm:ss)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accounts/{fiscalyearId}/{accountNumber}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get a single account by account number",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "Accounts_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fiscalyearId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "accountNumber",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "deprecated": false
      }
    },
    "/articleaccountcodings": {
      "get": {
        "tags": [
          "ArticleAccountCodings"
        ],
        "summary": "Get a list of article account codings. Vat rates are on present UTC time. Specify date (yyyy-MM-dd) to get for specific date.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "ArticleAccountCodings_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "vatRateDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArticleAccountCoding"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/articleaccountcodings/{articleAccountCodingId}": {
      "get": {
        "tags": [
          "ArticleAccountCodings"
        ],
        "summary": "Get a specific article account coding based on the Id. Vat rates are on present UTC time. Specify date (yyyy-MM-dd) to get for specific date.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "ArticleAccountCodings_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "articleAccountCodingId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "vatRateDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArticleAccountCoding"
            }
          }
        },
        "deprecated": false
      }
    },
    "/articlelabels": {
      "get": {
        "tags": [
          "ArticleLabels"
        ],
        "summary": "Gets all articlelabels.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "ArticleLabels_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArticleLabel"
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "ArticleLabels"
        ],
        "summary": "Create a articlelabel",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "ArticleLabels_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fromArticleLabel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArticleLabel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArticleLabel"
            }
          }
        },
        "deprecated": false
      }
    },
    "/articlelabels/{articleLabelId}": {
      "get": {
        "tags": [
          "ArticleLabels"
        ],
        "summary": "Gets an articlelabel by id.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "ArticleLabels_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "articleLabelId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "ArticleLabels"
        ],
        "summary": "Update a articlelabel",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "ArticleLabels_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "articleLabelId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "fromArticleLabel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArticleLabel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArticleLabel"
            }
          }
        },
        "deprecated": false
      }
    },
    "/articles": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Gets all active/inactive articles changed from the given date(yyyy-MM-dd) or date(yyyy-MM-dd hh:mm:ss).",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "Articles_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "changedFromDate",
            "in": "query",
            "description": "Only include changed customers from date (yyyy-MM-dd) or date(yyyy-MM-dd hh:mm:ss)",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "description": "Include inactive articles",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "articleNumber",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "showPricesWithTwoDecimals",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Article"
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Articles"
        ],
        "summary": "Create an article",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "Articles_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "article",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Article created",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          },
          "409": {
            "description": "Conflict. Article already exists"
          }
        },
        "deprecated": false
      }
    },
    "/articles/{articleId}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Gets an article by id.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "Articles_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "showPricesWithTwoDecimals",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Articles"
        ],
        "summary": "Update an article",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "Articles_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "article",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        },
        "deprecated": false
      }
    },
    "/attachmentlinks": {
      "post": {
        "tags": [
          "AttachmentLinks"
        ],
        "summary": "Create a new attachmentlink.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "AttachmentLinks_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "attachmentLinks",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttachmentLink"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentLink"
            }
          }
        },
        "deprecated": false
      }
    },
    "/attachments/{attachmentId}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Get a specific attachment.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "Attachments_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        },
        "deprecated": false
      }
    },
    "/attachments": {
      "post": {
        "tags": [
          "Attachments"
        ],
        "summary": "Create a new attachment.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "Attachments_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "postedAttachment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttachmentResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/bankaccounts": {
      "get": {
        "tags": [
          "BankAccounts"
        ],
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo</b></p>",
        "operationId": "BankAccounts_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BankAccount"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get the company information.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:accounting, ea:accounting_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo</b></p>",
        "operationId": "Companies_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "deprecated": false
      }
    },
    "/costcenteritems/{itemId}": {
      "get": {
        "tags": [
          "CostCenterItems"
        ],
        "summary": "Get a specific Cost center item.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing</b></p>",
        "operationId": "CostCenterItems_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CostCenterItem"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "CostCenterItems"
        ],
        "summary": "Put costcenter items.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing</b></p>",
        "operationId": "CostCenterItems_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostCenterItem"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CostCenterItem"
            }
          }
        },
        "deprecated": false
      }
    },
    "/costcenteritems": {
      "post": {
        "tags": [
          "CostCenterItems"
        ],
        "summary": "Create a new Cost Center Item.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing</b></p>",
        "operationId": "CostCenterItems_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostCenterItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CostCenterItem"
            }
          }
        },
        "deprecated": false
      }
    },
    "/costcenters": {
      "get": {
        "tags": [
          "CostCenters"
        ],
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing</b></p>",
        "operationId": "CostCenters_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CostCenter"
            }
          }
        },
        "deprecated": false
      }
    },
    "/currencies": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Get a list of Currencies",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "Currencies_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Currency"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/customerinvoicedrafts": {
      "get": {
        "tags": [
          "CustomerInvoiceDrafts"
        ],
        "summary": "Get all customer invoice drafts.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoiceDrafts_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerInvoiceDraft"
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CustomerInvoiceDrafts"
        ],
        "summary": "Create a customer invoice draft.",
        "description": "IsVatFree attribute on a CustomerInvoiceDraftRow shall only be used for articels with reverse VAT charge. For other VAT free articles IsVatFree shall be set to 'false'.<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoiceDrafts_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerInvoiceDraft",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceDraft"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceDraft"
            }
          }
        },
        "deprecated": false
      }
    },
    "/customerinvoicedrafts/{invoiceDraftId}": {
      "get": {
        "tags": [
          "CustomerInvoiceDrafts"
        ],
        "summary": "Get customer invoice draft by id.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoiceDrafts_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "invoiceDraftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceDraft"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "CustomerInvoiceDrafts"
        ],
        "summary": "Update a customer invoice draft.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoiceDrafts_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "invoiceDraftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "customerInvoiceDraft",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceDraft"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceDraft"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "CustomerInvoiceDrafts"
        ],
        "summary": "Delete a customer invoice draft.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoiceDrafts_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "invoiceDraftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/customerinvoicelistitems": {
      "get": {
        "tags": [
          "CustomerInvoiceListItems"
        ],
        "summary": "List all customer invoices",
        "description": "Get a list of all customer invoices, represented by a light-weight object without all the details of a full customer invoice.\r\nFilter by including or excluding already paid invoices.<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoiceListItems_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "changedFromDate",
            "in": "query",
            "description": "Only include changed customer invoices from date (yyyy-MM-dd) or date(yyyy-MM-dd hh:mm:ss)",
            "required": false,
            "type": "string"
          },
          {
            "name": "includePaid",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fromInvoiceNumber",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "createdFromDraftId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerInvoiceListItem"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/customerinvoicelistitems/{customerId}": {
      "get": {
        "tags": [
          "CustomerInvoiceListItems"
        ],
        "summary": "Get a list of all customer invoices on a specific customer. Filter by including or excluding already paid invoices.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoiceListItems_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "changedFromDate",
            "in": "query",
            "description": "Only include changed customer invoices from date (yyyy-MM-dd) or date(yyyy-MM-dd hh:mm:ss)",
            "required": false,
            "type": "string"
          },
          {
            "name": "includePaid",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fromInvoiceNumber",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "createdFromDraftId",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerInvoiceListItem"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/customerinvoices/{invoiceId}": {
      "get": {
        "tags": [
          "CustomerInvoices"
        ],
        "summary": "Gets a customer invoice with a specific id.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoices_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerInvoice"
            }
          }
        },
        "deprecated": false
      }
    },
    "/customerinvoicespaidbycreditcard": {
      "post": {
        "tags": [
          "CustomerInvoicesPaidByCreditCard"
        ],
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerInvoicesPaidByCreditCard_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "paidCustomerInvoiceDraft",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoicePaidByCreditCard"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerInvoice"
            }
          }
        },
        "deprecated": false
      }
    },
    "/customerledgeritems": {
      "get": {
        "tags": [
          "CustomerLedgerItems"
        ],
        "summary": "Get a list of customer ledger items.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerLedgerItems_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "changedFromDate",
            "in": "query",
            "description": "Only include changed customer invoices from date (yyyy-MM-dd) or date(yyyy-MM-dd hh:mm:ss)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerLedgerItem"
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CustomerLedgerItems"
        ],
        "summary": "Create a customer ledger item.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerLedgerItems_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerLedgerItem",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerLedgerItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerLedgerItem"
            }
          }
        },
        "deprecated": false
      }
    },
    "/customerledgeritems/{customerLedgerItemId}": {
      "get": {
        "tags": [
          "CustomerLedgerItems"
        ],
        "summary": "Get a customer ledger item by id.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerLedgerItems_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerLedgerItemId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerLedgerItem"
            }
          }
        },
        "deprecated": false
      }
    },
    "/customerledgeritems/customerledgeritemswithvoucher": {
      "post": {
        "tags": [
          "CustomerLedgerItems"
        ],
        "summary": "Create a customer ledger item and a voucher included.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerLedgerItems_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerLedgerItem",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerLedgerItemWithVoucher"
            }
          },
          {
            "name": "useAutomaticVatCalculation",
            "in": "query",
            "description": "For voucher, default value: false. Set to true and specify the sales or purchase gross amount and vat rows will be added automatically.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "useDefaultVatCodes",
            "in": "query",
            "description": "For voucher, default value: True. Set to false and override default vatcodes on all rows in the request.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerLedgerItemWithVoucher"
            }
          }
        },
        "deprecated": false
      }
    },
    "/customerlistitems": {
      "get": {
        "tags": [
          "CustomerListItems"
        ],
        "summary": "Get a list of all customers. Filter by using the filter parameters.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "CustomerListItems_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "changedFromDate",
            "in": "query",
            "description": "Only include changed customers from date (yyyy-MM-dd) or date (yyyy-MM-dd hh:mm:ss)",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "description": "Include inactive customers",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "customerNumber",
            "in": "query",
            "description": "Get one customer with this customer number",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerEmail",
            "in": "query",
            "description": "Get all customers with this e-mail",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerListItem"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/customers/{customerId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get a customer",
        "description": "Get a Customer item by customer id<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "Customers_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Update a customer",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "Customers_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "customer",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        },
        "deprecated": false
      }
    },
    "/customers": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Add a customer",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "Customers_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customer",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        },
        "deprecated": false
      }
    },
    "/deliverymethods": {
      "get": {
        "tags": [
          "DeliveryMethods"
        ],
        "summary": "Get a list of delivery methods",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "DeliveryMethods_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryMethod"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/deliveryterms": {
      "get": {
        "tags": [
          "DeliveryTerms"
        ],
        "summary": "Get a list of delivery terms",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "DeliveryTerms_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeliveryTerm"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/fiscalyears": {
      "get": {
        "tags": [
          "FiscalYears"
        ],
        "summary": "Get a list of fiscal years",
        "description": "Get a list of FiscalYear items.<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "FiscalYears_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FiscalYear"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/fiscalyears/{id}": {
      "get": {
        "tags": [
          "FiscalYears"
        ],
        "summary": "Get a fiscal year",
        "description": "Get a FiscalYear item by Id.<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "FiscalYears_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the FiscalYear item",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FiscalYear"
            }
          }
        },
        "deprecated": false
      }
    },
    "/foreignpaymentcodes": {
      "get": {
        "tags": [
          "ForeignPaymentCodes"
        ],
        "summary": "Gets the foreign payment codes.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard</b></p>",
        "operationId": "ForeignPaymentCodes_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ForeignPaymentCode"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/orderlistitems": {
      "get": {
        "tags": [
          "OrderListItems"
        ],
        "summary": "Gets a list of order list items. Exclude shipped orders by setting includeShipped to false.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Requires any of the following modules: <br><b>order_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "OrderListItems_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "includeShipped",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderListItem"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/orderlistitems/{customerId}": {
      "get": {
        "tags": [
          "OrderListItems"
        ],
        "summary": "Gets a list of order list items for a specific customer.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Requires any of the following modules: <br><b>order_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "OrderListItems_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderListItem"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/orders/{orderId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get order",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Requires any of the following modules: <br><b>order_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "Orders_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Update an order.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>order_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "Orders_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "order",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        },
        "deprecated": false
      }
    },
    "/orders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create order.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales</b></p><p>Requires any of the following modules: <br><b>order_standard</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing</b></p>",
        "operationId": "Orders_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        },
        "deprecated": false
      }
    },
    "/partnerresourcelinks/{partnerResourceLinkId}": {
      "get": {
        "tags": [
          "PartnerResourceLinks"
        ],
        "summary": "Get a partner resource link by id.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "PartnerResourceLinks_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerResourceLinkId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PartnerResourceLink"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "PartnerResourceLinks"
        ],
        "summary": "Update a partner resource link",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "PartnerResourceLinks_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerResourceLinkId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "partnerResourceLink",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnerResourceLink"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Partner resource link updated.",
            "schema": {
              "$ref": "#/definitions/PartnerResourceLink"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "PartnerResourceLinks"
        ],
        "summary": "Delete a partner resource link",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "PartnerResourceLinks_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerResourceLinkId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Partner resource link deleted.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          }
        },
        "deprecated": false
      }
    },
    "/partnerresourcelinks": {
      "get": {
        "tags": [
          "PartnerResourceLinks"
        ],
        "summary": "Get a list of partner resource links.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "PartnerResourceLinks_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PartnerResourceLink"
              }
            }
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "PartnerResourceLinks"
        ],
        "summary": "Create a partner resource link",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo</b></p>",
        "operationId": "PartnerResourceLinks_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partnerResourceLink",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnerResourceLink"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Partner resource link created.",
            "schema": {
              "$ref": "#/definitions/PartnerResourceLink"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          }
        },
        "deprecated": false
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get a list of projects",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing</b></p>",
        "operationId": "Projects_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "includeFinished",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "changedFromDate",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Project"
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create a new project.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing</b></p>",
        "operationId": "Projects_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "project",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "deprecated": false
      }
    },
    "/projects/{projectId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get a specific project.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing</b></p>",
        "operationId": "Projects_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update a project",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing</b></p>",
        "operationId": "Projects_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "project",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "deprecated": false
      }
    },
    "/supplierinvoicedrafts/{supplierInvoiceDraftId}/allocationperiods": {
      "get": {
        "tags": [
          "SupplierInvoiceDraftAllocationPeriods"
        ],
        "summary": "Get all allocation periods for an existing supplier invoice draft.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard</b></p>",
        "operationId": "SupplierInvoiceDraftAllocationPeriods_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "supplierInvoiceDraftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AllocationPeriod"
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "SupplierInvoiceDraftAllocationPeriods"
        ],
        "summary": "Update existing allocation periods in an existing supplier invoice draft.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard</b></p>",
        "operationId": "SupplierInvoiceDraftAllocationPeriods_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "supplierInvoiceDraftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "postedAllocationPlans",
            "in": "body",
            "description": "Array of allocation plans",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SupplierInvoiceDraftAllocationPlan"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AllocationPeriod"
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "SupplierInvoiceDraftAllocationPeriods"
        ],
        "summary": "Create allocation periods to an existing supplier invoice draft.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard</b></p>",
        "operationId": "SupplierInvoiceDraftAllocationPeriods_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "supplierInvoiceDraftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "postedAllocationPlans",
            "in": "body",
            "description": "Array of allocation plans",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SupplierInvoiceDraftAllocationPlan"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AllocationPeriod"
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "SupplierInvoiceDraftAllocationPeriods"
        ],
        "summary": "Delete all allocation periods for an existing supplier invoice draft.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard</b></p>",
        "operationId": "SupplierInvoiceDraftAllocationPeriods_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "supplierInvoiceDraftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Allocation periods deleted.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          },
          "403": {
            "description": "Not found."
          }
        },
        "deprecated": false
      }
    },
    "/supplierinvoicedrafts": {
      "get": {
        "tags": [
          "SupplierInvoiceDrafts"
        ],
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo</b></p>",
        "operationId": "SupplierInvoiceDrafts_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SupplierInvoiceDraft"
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "SupplierInvoiceDrafts"
        ],
        "summary": "Create a supplier invoice draft.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo</b></p>",
        "operationId": "SupplierInvoiceDrafts_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "postedSupplierInvoiceDraft",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupplierInvoiceDraft"
            }
          },
          {
            "name": "useDefaultVatCodes",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "calculateVatOnCostAccounts",
            "in": "query",
            "description": "Automatic calculation of VAT based on vat code. DK and NL only",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "batchProcessExtendedValidation",
            "in": "query",
            "description": "Validate for batch process and fiscal year.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "duplicateCheckExtendedValidation",
            "in": "query",
            "description": "Check if the invoice is duplicate.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplierInvoiceDraft"
            }
          }
        },
        "deprecated": false
      }
    },
    "/supplierinvoicedrafts/{supplierInvoiceDraftId}": {
      "get": {
        "tags": [
          "SupplierInvoiceDrafts"
        ],
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo</b></p>",
        "operationId": "SupplierInvoiceDrafts_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "supplierInvoiceDraftId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplierInvoiceDraft"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "SupplierInvoiceDrafts"
        ],
        "summary": "Update a supplier invoice draft.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo</b></p>",
        "operationId": "SupplierInvoiceDrafts_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "supplierInvoiceDraftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "supplierInvoiceDraft",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupplierInvoiceDraft"
            }
          },
          {
            "name": "useDefaultVatCodes",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "calculateVatOnCostAccounts",
            "in": "query",
            "description": "Automatic calculation of VAT based on vat code. DK and NL only",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplierInvoiceDraft"
            }
          }
        },
        "deprecated": false
      }
    },
    "/supplierinvoices": {
      "get": {
        "tags": [
          "SupplierInvoices"
        ],
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo</b></p>",
        "operationId": "SupplierInvoices_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "createdFromDraftId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "changedFromDate",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SupplierInvoice"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/supplierinvoices/{supplierInvoiceId}": {
      "get": {
        "tags": [
          "SupplierInvoices"
        ],
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo</b></p>",
        "operationId": "SupplierInvoices_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "supplierInvoiceId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupplierInvoice"
            }
          }
        },
        "deprecated": false
      }
    },
    "/supplierlistitems": {
      "get": {
        "tags": [
          "SupplierListItems"
        ],
        "summary": "Get a list of all suppliers. Filter by excluding inactive or changed from date (yyyy-MM-dd) or date(yyyy-MM-dd hh:mm:ss).",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo</b></p>",
        "operationId": "SupplierListItems_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "changedFromDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SupplierListItem"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/suppliers/{supplierId}": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Get a specific supplier.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo</b></p>",
        "operationId": "Suppliers_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Edit a specific supplier",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo</b></p>",
        "operationId": "Suppliers_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "supplier",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        },
        "deprecated": false
      }
    },
    "/suppliers": {
      "post": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Create a new supplier.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo</b></p>",
        "operationId": "Suppliers_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "supplier",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        },
        "deprecated": false
      }
    },
    "/termsofpayment": {
      "get": {
        "tags": [
          "TermsOfPayment"
        ],
        "summary": "Get a list of TermsOfPayment items",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "TermsOfPayment_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TermsOfPayment"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/termsofpayment/{id}": {
      "get": {
        "tags": [
          "TermsOfPayment"
        ],
        "summary": "Get a TermsOfPayment item by id",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "TermsOfPayment_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TermsOfPayment"
            }
          }
        },
        "deprecated": true
      }
    },
    "/units": {
      "get": {
        "tags": [
          "Units"
        ],
        "summary": "Get a list of Unit items",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "Units_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Unit"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/units/{id}": {
      "get": {
        "tags": [
          "Units"
        ],
        "summary": "Get a Unit item by id",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>",
        "operationId": "Units_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Unit"
            }
          }
        },
        "deprecated": false
      }
    },
    "/vatcodes": {
      "get": {
        "tags": [
          "VatCode"
        ],
        "summary": "Gets a list of all Vat Codes",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo</b></p>",
        "operationId": "VatCode_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "vatRateDate",
            "in": "query",
            "description": "Default value: Today",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VatCode"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/vatcodes/{id}": {
      "get": {
        "tags": [
          "VatCode"
        ],
        "summary": "Get a Vatcode item by id",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo</b></p>",
        "operationId": "VatCode_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "vatRateDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VatCode"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/vouchers/{fiscalyearId}": {
      "get": {
        "tags": [
          "Vouchers"
        ],
        "summary": "Get all vouchers in fiscal year.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Pro, Standard, Bookkeeping, Invoicing, Solo</b></p>",
        "operationId": "Vouchers_ListByFiscalYear",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fiscalyearId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "changedFromDate",
            "in": "query",
            "description": "Only include changed vouchers from date (yyyy-MM-dd) or date(yyyy-MM-dd hh:mm:ss)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Voucher"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/vouchers/{fiscalYearId}/{voucherId}": {
      "get": {
        "tags": [
          "Vouchers"
        ],
        "summary": "Get a specific voucher.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Pro, Standard, Bookkeeping, Invoicing, Solo</b></p>",
        "operationId": "Vouchers_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fiscalYearId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "voucherId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Voucher"
            }
          }
        },
        "deprecated": false
      }
    },
    "/vouchers": {
      "post": {
        "tags": [
          "Vouchers"
        ],
        "summary": "Create a voucher.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Pro, Standard, Bookkeeping, Solo</b></p>",
        "operationId": "Vouchers_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "voucher",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Voucher"
            }
          },
          {
            "name": "useAutomaticVatCalculation",
            "in": "query",
            "description": "Default value: false. Set to true and specify the sales or purchase gross amount and vat rows will be added automatically.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "useDefaultVatCodes",
            "in": "query",
            "description": "Default value: True. Set to false and override default vatcodes on all rows in the request.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Voucher"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "AccountBalance": {
      "type": "object",
      "properties": {
        "AccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "AccountName": {
          "type": "string"
        },
        "Balance": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Account": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Number": {
          "format": "int64",
          "type": "integer"
        },
        "VatCodeDescription": {
          "description": "Describes what kind of VAT that is associated with the account",
          "type": "string"
        },
        "FiscalYearId": {
          "format": "uuid",
          "description": "The Id of the Fiscal year that the account belongs to",
          "type": "string"
        },
        "ReferenceCode": {
          "description": "Returns the reference code on the account. This feature is for dutch companies only",
          "type": "string"
        },
        "Type": {
          "format": "int32",
          "description": "Returns account type number",
          "type": "integer"
        },
        "TypeDescription": {
          "description": "Returns account type descripion",
          "type": "string"
        },
        "VatCodeId": {
          "format": "uuid",
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        }
      }
    },
    "ArticleAccountCoding": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "NameEnglish": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "VatRate": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "VatRatePercent": {
          "format": "double",
          "type": "number"
        },
        "DomesticSalesSubjectToReversedConstructionVatAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "DomesticSalesSubjectToVatAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "DomesticSalesVatExemptAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "ForeignSalesSubjectToMossAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "ForeignSalesSubjectToThirdPartySalesAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "ForeignSalesSubjectToVatWithinEuAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "ForeignSalesVatExemptOutsideEuAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "ForeignSalesVatExemptWithinEuAccountNumber": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ArticleLabel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "Article": {
      "required": [
        "IsActive",
        "Number",
        "Name",
        "CodingId",
        "UnitId"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Purpose: Unique Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "IsActive": {
          "type": "boolean"
        },
        "Number": {
          "description": "Max length: 40 characters",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "NameEnglish": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "NetPrice": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "maximum": 10000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "GrossPrice": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "maximum": 10000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "CodingId": {
          "format": "uuid",
          "description": "Source: Get from /v1/articleaccountcodings",
          "type": "string"
        },
        "UnitId": {
          "format": "uuid",
          "description": "Source: Get from /v1/units",
          "type": "string"
        },
        "UnitName": {
          "description": "Purpose: Returns the unit name entered from UnitId",
          "type": "string"
        },
        "StockBalance": {
          "format": "double",
          "description": "Default: 0. Purpose: Sets the stock balance for this article",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "StockBalanceReserved": {
          "format": "double",
          "description": "Purpose: Returns the reserved stock balance for this article",
          "type": "number"
        },
        "StockBalanceAvailable": {
          "format": "double",
          "description": "Purpose: Returns the available stock balance for this article",
          "type": "number"
        },
        "ChangedUtc": {
          "format": "date-time",
          "description": "Purpose: Returns the last date and time from when a change was made on the article",
          "type": "string"
        },
        "HouseWorkType": {
          "format": "int32",
          "type": "integer"
        },
        "PurchasePrice": {
          "format": "double",
          "type": "number"
        },
        "ArticleLabels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArticleLabel"
          }
        }
      }
    },
    "AttachmentLink": {
      "required": [
        "DocumentType",
        "AttachmentIds"
      ],
      "type": "object",
      "properties": {
        "DocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "DocumentType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "AttachmentIds": {
          "description": "Source: Get from /v1/attachments.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "Attachment": {
      "required": [
        "Data",
        "ContentType",
        "FileName"
      ],
      "type": "object",
      "properties": {
        "ThumbNail": {
          "format": "byte",
          "description": "Purpose: Thumbnail provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "DocumentId": {
          "format": "uuid",
          "description": "Purpose: If attachment is matched with a document, the Id of that document will be shown here",
          "type": "string"
        },
        "AttachedDocumentType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "Data": {
          "description": "Format: Must be Base64 encoded byte array",
          "type": "string"
        },
        "AttachmentStatus": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "Id": {
          "format": "uuid",
          "description": "Purpose: Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "ContentType": {
          "description": "= ['image/jpeg' or 'image/png' or 'image/tiff' or 'application/pdf']",
          "type": "string"
        },
        "FileName": {
          "type": "string"
        }
      }
    },
    "AttachmentResult": {
      "required": [
        "ContentType",
        "FileName"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Purpose: Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "ContentType": {
          "description": "= ['image/jpeg' or 'image/png' or 'image/tiff' or 'application/pdf']",
          "type": "string"
        },
        "FileName": {
          "type": "string"
        }
      }
    },
    "BankAccount": {
      "type": "object",
      "properties": {
        "Bank": {
          "type": "string"
        },
        "BankAccountType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "type": "integer"
        },
        "BankAccountTypeDescription": {
          "type": "string"
        },
        "Bban": {
          "type": "string"
        },
        "Iban": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "HasActiveBankAgreement": {
          "type": "boolean"
        }
      }
    },
    "Company": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "CorporateIdentityNumber": {
          "type": "string"
        },
        "VatCode": {
          "description": "VAT identification number",
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "BankGiro": {
          "description": "Only used in Sweden.",
          "type": "string"
        },
        "PlusGiro": {
          "description": "Only used in Sweden.",
          "type": "string"
        },
        "BankAccountNumber": {
          "type": "string"
        },
        "BankIban": {
          "type": "string"
        },
        "Gln": {
          "description": "Global Location Number",
          "type": "string"
        },
        "EAccountingVariant": {
          "format": "int32",
          "description": "Variant of eAccouting. 1 = Standard, 2 = Invoicing, 3 = Bookkeeping",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "type": "integer"
        },
        "CompanyText": {
          "$ref": "#/definitions/CompanyText",
          "description": "Company settings - Other information"
        }
      }
    },
    "CompanyText": {
      "type": "object",
      "properties": {
        "CustomerInvoiceTextDomestic": {
          "type": "string"
        },
        "CustomerInvoiceTextForeign": {
          "type": "string"
        },
        "OrderTextDomestic": {
          "type": "string"
        },
        "OrderTextForeign": {
          "type": "string"
        },
        "OverDueTextDomestic": {
          "type": "string"
        },
        "OverDueTextForeign": {
          "type": "string"
        }
      }
    },
    "CostCenterItem": {
      "required": [
        "CostCenterId",
        "Name",
        "ShortName",
        "IsActive"
      ],
      "type": "object",
      "properties": {
        "CostCenterId": {
          "format": "uuid",
          "description": "Source: Get from /v1/costcenters",
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "description": "Purpose: Unique Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ShortName": {
          "description": "Max length: 9 characters",
          "maxLength": 9,
          "minLength": 0,
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        }
      }
    },
    "CostCenter": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Number": {
          "format": "int32",
          "type": "integer"
        },
        "IsActive": {
          "type": "boolean"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostCenterItem"
          }
        },
        "CostCenterId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "Currency": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        }
      }
    },
    "CustomerInvoiceDraft": {
      "required": [
        "CustomerId",
        "RotReducedInvoicingType",
        "InvoiceCustomerName",
        "InvoicePostalCode",
        "InvoiceCity",
        "InvoiceCountryCode",
        "EuThirdParty",
        "CustomerIsPrivatePerson",
        "ReverseChargeOnConstructionServices"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Purpose: Unique Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "CustomerId": {
          "format": "uuid",
          "description": "Source: Get from /v1/customerlistitems.",
          "type": "string"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "RotReducedInvoicingType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "RotReducedInvoicingPropertyName": {
          "description": "Max length: 40 characters",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "RotReducedInvoicingOrgNumber": {
          "description": "Max length: 11 characters",
          "maxLength": 11,
          "minLength": 0,
          "type": "string"
        },
        "RotReducedInvoicingAmount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "RotReducedInvoicingAutomaticDistribution": {
          "description": "Default: False",
          "type": "boolean"
        },
        "RotPropertyType": {
          "format": "int32",
          "type": "integer"
        },
        "HouseWorkOtherCosts": {
          "format": "double",
          "type": "number"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerInvoiceDraftRow"
          }
        },
        "Persons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesDocumentRotRutReductionPerson"
          }
        },
        "YourReference": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "OurReference": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCustomerName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoicePostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCity": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCountryCode": {
          "description": "Max length: 2 characters",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCustomerName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryPostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCity": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCountryCode": {
          "description": "Max length: 2 characters",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodCode": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermCode": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryDate": {
          "format": "date-time",
          "type": "string"
        },
        "EuThirdParty": {
          "type": "boolean"
        },
        "CustomerIsPrivatePerson": {
          "type": "boolean"
        },
        "ReverseChargeOnConstructionServices": {
          "type": "boolean"
        },
        "IncludesVat": {
          "description": "Purpose: If true the unit prices on rows include VAT. The value is set upon creation depending whether \"Show prices excl. VAT for private individuals\" in company settings is marked or not",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "CustomerInvoiceDraftRow": {
      "required": [
        "LineNumber",
        "IsTextRow",
        "Text",
        "IsVatFree"
      ],
      "type": "object",
      "properties": {
        "LineNumber": {
          "format": "int32",
          "maximum": 1000,
          "minimum": 0,
          "type": "integer"
        },
        "ArticleId": {
          "format": "uuid",
          "description": "Source: Get from /v1/articles. Required if IsTextRow is false",
          "type": "string"
        },
        "ArticleNumber": {
          "description": "Purpose: Returns the article number from the entered ArticleId",
          "type": "string"
        },
        "IsTextRow": {
          "type": "boolean"
        },
        "Text": {
          "description": "Max length: 2000. Sets the article name",
          "maxLength": 2000,
          "minLength": 0,
          "type": "string"
        },
        "UnitPrice": {
          "format": "double",
          "description": "Format: 2 decimals allowed if the customer is domestic or 4 decimals if foreign",
          "type": "number"
        },
        "DiscountPercentage": {
          "format": "double",
          "description": "Format: 4 decimals allowed",
          "maximum": 1,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,4})?",
          "type": "number"
        },
        "Quantity": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "WorkCostType": {
          "format": "int32",
          "type": "integer"
        },
        "IsWorkCost": {
          "type": "boolean"
        },
        "WorkHours": {
          "format": "double",
          "type": "number"
        },
        "MaterialCosts": {
          "format": "double",
          "type": "number"
        },
        "IsVatFree": {
          "type": "boolean"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "description": "Source: Get from /v1/costcenteritems",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "description": "Source: Get from /v1/costcenteritems",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "description": "Source: Get from /v1/costcenteritems",
          "type": "string"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "SalesDocumentRotRutReductionPerson": {
      "required": [
        "Ssn",
        "Amount"
      ],
      "type": "object",
      "properties": {
        "Ssn": {
          "description": "Purpose: Social security number",
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "CustomerInvoiceListItem": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "InvoiceNumber": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerNumber": {
          "type": "string"
        },
        "CustomerName": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "InvoiceDate": {
          "type": "string"
        },
        "DueDate": {
          "type": "string"
        },
        "DeliveryDate": {
          "type": "string"
        },
        "RemainingAmount": {
          "format": "double",
          "type": "number"
        },
        "TotalAmount": {
          "format": "double",
          "type": "number"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "Href": {
          "type": "string"
        },
        "CustomerInvoiceAddress1": {
          "type": "string"
        },
        "CustomerInvoiceAddress2": {
          "type": "string"
        },
        "CustomerInvoiceCity": {
          "type": "string"
        },
        "CustomerInvoicePostalCode": {
          "type": "string"
        },
        "CustomerInvoiceCountry": {
          "type": "string"
        },
        "CustomerEmail": {
          "type": "string"
        },
        "CustomerCellphone": {
          "type": "string"
        },
        "CustomerReference": {
          "type": "string"
        },
        "PaymentReferenceNumber": {
          "type": "string"
        },
        "OurReference": {
          "type": "string"
        },
        "RemainingAmountInvoiceCurrency": {
          "format": "double",
          "type": "number"
        },
        "CreatedFromDraftId": {
          "format": "uuid",
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "CustomerInvoice": {
      "required": [
        "EuThirdParty",
        "CurrencyCode",
        "TotalAmount",
        "TotalVatAmount",
        "TotalRoundings",
        "TotalAmountInvoiceCurrency",
        "CustomerId",
        "Rows",
        "InvoiceDate",
        "DueDate",
        "RotReducedInvoicingType",
        "InvoiceCustomerName",
        "InvoicePostalCode",
        "InvoiceCity",
        "InvoiceCountryCode",
        "CustomerIsPrivatePerson",
        "TermsOfPaymentId"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "EuThirdParty": {
          "type": "boolean"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "CurrencyCode": {
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CreatedByUserId": {
          "format": "uuid",
          "type": "string"
        },
        "TotalAmount": {
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "TotalVatAmount": {
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "TotalRoundings": {
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "TotalAmountInvoiceCurrency": {
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "CustomerId": {
          "format": "uuid",
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerInvoiceRow"
          }
        },
        "InvoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string"
        },
        "DeliveryDate": {
          "format": "date-time",
          "type": "string"
        },
        "RotReducedInvoicingType": {
          "format": "int32",
          "maximum": 2,
          "minimum": 0,
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "RotReducedInvoicingAmount": {
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "RotReducedInvoicingPercent": {
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "RotReducedInvoicingPropertyName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "RotReducedInvoicingOrgNumber": {
          "maxLength": 11,
          "minLength": 0,
          "type": "string"
        },
        "Persons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesDocumentRotRutReductionPerson"
          }
        },
        "RotReducedInvoicingAutomaticDistribution": {
          "type": "boolean"
        },
        "ElectronicReference": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ElectronicAddress": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "EdiServiceDelivererId": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "OurReference": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "YourReference": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCustomerName": {
          "type": "string"
        },
        "InvoiceAddress1": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress2": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoicePostalCode": {
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCity": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCountryCode": {
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCustomerName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress1": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress2": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryPostalCode": {
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCity": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCountryCode": {
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodCode": {
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermCode": {
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "CustomerIsPrivatePerson": {
          "type": "boolean"
        },
        "TermsOfPaymentId": {
          "format": "uuid",
          "type": "string"
        },
        "CustomerEmail": {
          "type": "string"
        },
        "InvoiceNumber": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerNumber": {
          "type": "string"
        },
        "PaymentReferenceNumber": {
          "type": "string"
        },
        "RotPropertyType": {
          "format": "int32",
          "type": "integer"
        },
        "WorkHouseOtherCosts": {
          "format": "double",
          "type": "number"
        },
        "RemainingAmount": {
          "format": "double",
          "type": "number"
        },
        "RemainingAmountInvoiceCurrency": {
          "format": "double",
          "type": "number"
        },
        "ReferringInvoiceId": {
          "format": "uuid",
          "type": "string"
        },
        "VoucherNumber": {
          "type": "string"
        },
        "VoucherId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "CustomerInvoiceRow": {
      "required": [
        "AmountNoVat",
        "PercentVat",
        "LineNumber",
        "IsTextRow",
        "Text",
        "IsWorkCost",
        "IsVatFree"
      ],
      "type": "object",
      "properties": {
        "ArticleNumber": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "AmountNoVat": {
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "PercentVat": {
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "LineNumber": {
          "format": "int32",
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        },
        "IsTextRow": {
          "type": "boolean"
        },
        "Text": {
          "type": "string"
        },
        "UnitPrice": {
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "UnitName": {
          "type": "string"
        },
        "DiscountPercentage": {
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "Quantity": {
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "IsWorkCost": {
          "type": "boolean"
        },
        "IsVatFree": {
          "type": "boolean"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "type": "string"
        },
        "UnitId": {
          "format": "uuid",
          "type": "string"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "CustomerInvoicePaidByCreditCard": {
      "required": [
        "EuThirdParty",
        "CurrencyCode",
        "TotalAmount",
        "TotalVatAmount",
        "TotalRoundings",
        "CustomerId",
        "Rows",
        "InvoiceDate",
        "DueDate",
        "RotReducedInvoicingType",
        "InvoiceCustomerName",
        "InvoicePostalCode",
        "InvoiceCity",
        "InvoiceCountryCode",
        "CustomerIsPrivatePerson",
        "TermsOfPaymentId"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Purpose: Unique Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "EuThirdParty": {
          "type": "boolean"
        },
        "CurrencyCode": {
          "description": "Max length: 3 characters",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CreatedByUserId": {
          "format": "uuid",
          "type": "string"
        },
        "TotalAmount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "TotalVatAmount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "TotalRoundings": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "CustomerId": {
          "format": "uuid",
          "description": "Source: Get from /v1/customerlistitems",
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerInvoiceRow"
          }
        },
        "InvoiceDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD",
          "type": "string"
        },
        "RotReducedInvoicingType": {
          "format": "int32",
          "maximum": 2,
          "minimum": 0,
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "RotReducedInvoicingAmount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "RotReducedInvoicingPercent": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "RotReducedInvoicingPropertyName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "RotReducedInvoicingOrgNumber": {
          "description": "Max length: 11 characters",
          "maxLength": 11,
          "minLength": 0,
          "type": "string"
        },
        "Persons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesDocumentRotRutReductionPerson"
          }
        },
        "RotReducedInvoicingAutomaticDistribution": {
          "type": "boolean"
        },
        "ElectronicReference": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ElectronicAddress": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "EdiServiceDelivererId": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "OurReference": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "YourReference": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCustomerName": {
          "type": "string"
        },
        "InvoiceAddress1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoicePostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCity": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCountryCode": {
          "description": "Max length: 3 characters",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCustomerName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryPostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCity": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCountryCode": {
          "description": "Max length: 3 characters",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodCode": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermCode": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "CustomerIsPrivatePerson": {
          "type": "boolean"
        },
        "TermsOfPaymentId": {
          "format": "uuid",
          "description": "Get from /v1/termsofpayment",
          "type": "string"
        },
        "CustomerEmail": {
          "type": "string"
        },
        "RotPropertyType": {
          "format": "int32",
          "type": "integer"
        },
        "HouseWorkOtherCosts": {
          "format": "double",
          "type": "number"
        },
        "IsCredit": {
          "type": "boolean"
        },
        "ReferringInvoiceId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "CustomerLedgerItem": {
      "required": [
        "CurrencyCode",
        "CustomerId",
        "DueDate",
        "InvoiceDate",
        "InvoiceNumber",
        "IsCreditInvoice",
        "RemainingAmountInvoiceCurrency",
        "RoundingsAmountInvoiceCurrency",
        "TotalAmountInvoiceCurrency",
        "VATAmountInvoiceCurrency",
        "VoucherId"
      ],
      "type": "object",
      "properties": {
        "CurrencyCode": {
          "description": "Max length: 3 characters",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyRate": {
          "format": "double",
          "type": "number"
        },
        "CurrencyRateUnit": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerId": {
          "format": "uuid",
          "description": "Source: Get from /v1/customerlistitems.",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD",
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "description": "Purpose: Unique Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "InvoiceDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD",
          "type": "string"
        },
        "InvoiceNumber": {
          "format": "int32",
          "type": "integer"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "PaymentReferenceNumber": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "RemainingAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "RoundingsAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1,
          "minimum": -1,
          "type": "number"
        },
        "TotalAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "VATAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "VoucherId": {
          "format": "uuid",
          "description": "Source: Get from v1/vouchers/{fiscalyearid}.",
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "CustomerLedgerItemWithVoucher": {
      "required": [
        "CurrencyCode",
        "CustomerId",
        "DueDate",
        "InvoiceDate",
        "InvoiceNumber",
        "IsCreditInvoice",
        "RemainingAmountInvoiceCurrency",
        "RoundingsAmountInvoiceCurrency",
        "TotalAmountInvoiceCurrency",
        "VATAmountInvoiceCurrency",
        "Voucher"
      ],
      "type": "object",
      "properties": {
        "CurrencyCode": {
          "description": "Max length: 3 characters",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyRate": {
          "format": "double",
          "type": "number"
        },
        "CurrencyRateUnit": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerId": {
          "format": "uuid",
          "description": "Source: Get from /v1/customerlistitems.",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD",
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "description": "Purpose: Unique Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "InvoiceDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD",
          "type": "string"
        },
        "InvoiceNumber": {
          "format": "int32",
          "type": "integer"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "PaymentReferenceNumber": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "RemainingAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "RoundingsAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1,
          "minimum": -1,
          "type": "number"
        },
        "TotalAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "VATAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "Voucher": {
          "$ref": "#/definitions/Voucher"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Voucher": {
      "required": [
        "VoucherDate",
        "VoucherText",
        "Rows"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Purpose: Unique Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "VoucherDate": {
          "format": "date-time",
          "description": "Format: yyyy-mm-dd",
          "type": "string"
        },
        "VoucherText": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VoucherRow"
          }
        },
        "NumberAndNumberSeries": {
          "description": "Purpose: Returns the voucher number. Contains voucher serie if used",
          "type": "string"
        },
        "Attachments": {
          "$ref": "#/definitions/AttachmentLink"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "VoucherRow": {
      "required": [
        "AccountNumber"
      ],
      "type": "object",
      "properties": {
        "AccountNumber": {
          "format": "int64",
          "minimum": 1,
          "type": "integer"
        },
        "DebetAmount": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "maximum": 1000000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "CreditAmount": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "maximum": 1000000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "TransactionText": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "description": "Source: Get from /v1/costcenters",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "description": "Source: Get from /v1/costcenters",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "description": "Source: Get from /v1/costcenters",
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveryDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "type": "string"
        },
        "HarvestYear": {
          "format": "int32",
          "description": "Purpose: This feature is for dutch companies only which enabled agriculture support",
          "type": "integer"
        },
        "VatCodeId": {
          "format": "uuid",
          "type": "string"
        },
        "VatCode": {
          "type": "string"
        },
        "ProjectId": {
          "format": "uuid",
          "description": "Source: Get from /v1/projects",
          "type": "string"
        }
      }
    },
    "CustomerListItem": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "CustomerNumber": {
          "type": "string"
        },
        "CorporateIdentityNumber": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Href": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Email": {
          "type": "string"
        }
      }
    },
    "Customer": {
      "required": [
        "InvoiceCity",
        "InvoicePostalCode",
        "Name",
        "TermsOfPaymentId",
        "IsPrivatePerson"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Purpose: Unique Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "CustomerNumber": {
          "description": "Purpose: Unique identifier. If not provided, eAccounting will provide one",
          "maxLength": 16,
          "minLength": 0,
          "type": "string"
        },
        "CorporateIdentityNumber": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonEmail": {
          "description": "Max length: 255 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonMobile": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonName": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonPhone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyCode": {
          "description": "Max length: 3 characters. Default value: Currency of the user company",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "GLN": {
          "description": "Max length: 255 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "EmailAddress": {
          "description": "Max length: 255 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCity": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCountryCode": {
          "description": "Max length: 2 characters",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "InvoicePostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCustomerName": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress1": {
          "description": "Max length: 50 characters. Purpose: Only used if invoice address differs from delivery address",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress2": {
          "description": "Max length: 50 characters. Purpose: Only used if invoice address differs from delivery address",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCity": {
          "description": "Max length: 50 characters. Purpose: Only used if invoice city differs from delivery city",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCountryCode": {
          "description": "Max length: 2 characters. Purpose: Only used if invoice country code differs from delivery country code",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryPostalCode": {
          "description": "Max length: 10 characters. Purpose: Only used if invoice postal code differs from delivery postal code",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodId": {
          "format": "uuid",
          "description": "Source: Get from /v1/deliverymethods",
          "type": "string"
        },
        "DeliveryTermId": {
          "format": "uuid",
          "description": "Source: Get from /v1/deliveryterms",
          "type": "string"
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Note": {
          "description": "Max length: 4000 characters",
          "maxLength": 4000,
          "minLength": 0,
          "type": "string"
        },
        "ReverseChargeOnConstructionServices": {
          "description": "Default: false. Purpose: If true, VatNumber must be set aswell",
          "type": "boolean"
        },
        "WebshopCustomerNumber": {
          "format": "int32",
          "type": "integer"
        },
        "MobilePhone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Telephone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "TermsOfPaymentId": {
          "format": "uuid",
          "description": "Source: Get from /v1/termsofpayment",
          "type": "string"
        },
        "TermsOfPayment": {
          "$ref": "#/definitions/TermsOfPayment",
          "description": "Purpose: Returns the terms of payment model entered from TermsOfPaymentId"
        },
        "VatNumber": {
          "description": "Max length: 20 characters. Format: 2 character country code followed by 8-12 numbers.",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "WwwAddress": {
          "description": "Max length: 255 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "LastInvoiceDate": {
          "format": "date-time",
          "description": "Purpose: Returns the last invoice date",
          "type": "string"
        },
        "IsPrivatePerson": {
          "type": "boolean"
        },
        "ChangedUtc": {
          "format": "date-time",
          "description": "Purpose: Returns the last date and time from when a change was made on the customer",
          "type": "string"
        },
        "DiscountPercentage": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "TermsOfPayment": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Purpose: Unique Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "type": "string"
        },
        "NameEnglish": {
          "type": "string"
        },
        "NumberOfDays": {
          "format": "int32",
          "type": "integer"
        },
        "TermsOfPaymentTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "TermsOfPaymentTypeText": {
          "type": "string"
        }
      }
    },
    "DeliveryMethod": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "DeliveryTerm": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "FiscalYear": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ForeignPaymentCode": {
      "type": "object",
      "properties": {
        "Code": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        }
      }
    },
    "OrderListItem": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Number": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerName": {
          "type": "string"
        },
        "CustomerNumber": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "OrderDate": {
          "format": "date-time",
          "type": "string"
        },
        "DeliveryDate": {
          "format": "date-time",
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "Href": {
          "type": "string"
        }
      }
    },
    "Order": {
      "required": [
        "Amount",
        "CustomerId",
        "CurrencyCode",
        "VatAmount",
        "RoundingsAmount",
        "InvoiceCity",
        "InvoiceCountryCode",
        "InvoiceCustomerName",
        "InvoicePostalCode",
        "EuThirdParty",
        "OrderDate",
        "Status",
        "RotReducedInvoicingType",
        "ReverseChargeOnConstructionServices"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Purpose: Unique Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "Amount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "CustomerId": {
          "format": "uuid",
          "description": "Get from /v1/customerlistitems",
          "type": "string"
        },
        "CurrencyCode": {
          "description": "Max length: 3 characters",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "VatAmount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "RoundingsAmount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveredAmount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveredVatAmount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveredRoundingsAmount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveryCustomerName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryPostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCity": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCountryCode": {
          "description": "Max length: 2 characters",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "YourReference": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "OurReference": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCity": {
          "type": "string"
        },
        "InvoiceCountryCode": {
          "description": "Max length: 2 characters",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCustomerName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoicePostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodCode": {
          "description": "Max length: 50 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermCode": {
          "description": "Max length: 50 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "EuThirdParty": {
          "type": "boolean"
        },
        "CustomerIsPrivatePerson": {
          "description": "Purpose: The value relates to the property of the customer to whom it is assigned",
          "type": "boolean",
          "readOnly": true
        },
        "OrderDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD",
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "maximum": 3,
          "minimum": 1,
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "Number": {
          "format": "int32",
          "type": "integer"
        },
        "DeliveryDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD. Default: null",
          "type": "string"
        },
        "HouseWorkAmount": {
          "format": "double",
          "type": "number"
        },
        "HouseWorkAutomaticDistribution": {
          "type": "boolean"
        },
        "HouseWorkCorporateIdentityNumber": {
          "type": "string"
        },
        "HouseWorkPropertyName": {
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderRow"
          }
        },
        "ShippedDateTime": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD. Default: null",
          "type": "string"
        },
        "RotReducedInvoicingType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "RotPropertyType": {
          "format": "int32",
          "type": "integer"
        },
        "Persons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesDocumentRotRutReductionPerson"
          }
        },
        "ReverseChargeOnConstructionServices": {
          "type": "boolean"
        }
      }
    },
    "OrderRow": {
      "required": [
        "LineNumber",
        "IsTextRow",
        "Text",
        "IsWorkCost",
        "IsVatFree"
      ],
      "type": "object",
      "properties": {
        "LineNumber": {
          "format": "int32",
          "maximum": 1000,
          "minimum": 0,
          "type": "integer"
        },
        "DeliveredQuantity": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "ArticleId": {
          "format": "uuid",
          "type": "string"
        },
        "ArticleNumber": {
          "type": "string"
        },
        "IsTextRow": {
          "type": "boolean"
        },
        "Text": {
          "type": "string"
        },
        "UnitPrice": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DiscountPercentage": {
          "format": "double",
          "description": "Format: 2 decimals",
          "maximum": 1,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "Quantity": {
          "format": "double",
          "description": "Format: 4 decimals",
          "pattern": "[-]?\\d+(.\\d{1,4})?",
          "type": "number"
        },
        "WorkCostType": {
          "format": "int32",
          "type": "integer"
        },
        "IsWorkCost": {
          "type": "boolean"
        },
        "IsVatFree": {
          "type": "boolean"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "description": "Source: Get from /v1/costcenters",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "description": "Source: Get from /v1/costcenters",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "description": "Source: Get from /v1/costcenters",
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "PartnerResourceLink": {
      "required": [
        "ResourceId",
        "ResourceType",
        "Href",
        "PartnerCompanyName",
        "PartnerSystemName"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Purpose: Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "ResourceId": {
          "format": "uuid",
          "description": "Purpose: Link to the resource in eAccounting",
          "type": "string"
        },
        "ResourceType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "Href": {
          "description": "Link to the third party solution page",
          "type": "string"
        },
        "PartnerCompanyName": {
          "type": "string"
        },
        "PartnerSystemName": {
          "type": "string"
        }
      }
    },
    "Project": {
      "required": [
        "Number",
        "Name",
        "StartDate"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Purpose: Unique Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "Number": {
          "description": "Max length: 150 characters",
          "maxLength": 150,
          "minLength": 0,
          "type": "string"
        },
        "Name": {
          "description": "Max length: 200 characters",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "CustomerId": {
          "format": "uuid",
          "type": "string"
        },
        "CustomerName": {
          "description": "Purpose: CustomerName depending on CustomerId",
          "type": "string",
          "readOnly": true
        },
        "Notes": {
          "description": "Max length: 500 characters",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "description": "Purpose: Is automatically set",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AllocationPeriod": {
      "required": [
        "SupplierInvoiceId",
        "SupplierInvoiceRowLine",
        "Rows"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "SupplierInvoiceId": {
          "format": "uuid",
          "type": "string"
        },
        "SupplierInvoiceRowLine": {
          "format": "int32",
          "type": "integer"
        },
        "AllocationPeriodSourceType": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer",
          "readOnly": true
        },
        "Status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "type": "string"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        },
        "BookkeepingDate": {
          "format": "date-time",
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllocationPeriodRow"
          }
        },
        "DebitAccountNumber": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "CreditAccountNumber": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "AllocationPeriodRow": {
      "required": [
        "AccountNumber",
        "Amount",
        "DebitCredit"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "AllocationPeriodId": {
          "format": "uuid",
          "type": "string"
        },
        "AccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "DebitCredit": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "SupplierInvoiceDraftAllocationPlan": {
      "required": [
        "SupplierInvoiceDraftRowId"
      ],
      "type": "object",
      "properties": {
        "SupplierInvoiceDraftRowId": {
          "format": "uuid",
          "type": "string"
        },
        "BookkeepingStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "AmountToAllocate": {
          "format": "double",
          "type": "number"
        },
        "QuantityToAllocate": {
          "format": "double",
          "type": "number"
        },
        "WeightToAllocate": {
          "format": "double",
          "type": "number"
        },
        "AllocationAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "NumberOfAllocationPeriods": {
          "format": "int32",
          "maximum": 1200,
          "minimum": 1,
          "type": "integer"
        }
      }
    },
    "SupplierInvoiceDraft": {
      "required": [
        "SupplierId",
        "IsCreditInvoice",
        "Rows"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Purpose: Unique Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "SupplierId": {
          "format": "uuid",
          "description": "Source: Get from /v1/supplierlistitems",
          "type": "string"
        },
        "BankAccountId": {
          "format": "uuid",
          "description": "Source: Get from /v1/bankaccounts",
          "type": "string"
        },
        "InvoiceDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD. Default: Today's date",
          "type": "string"
        },
        "PaymentDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD. Default: Date based on the suppliers Terms of payment",
          "type": "string"
        },
        "InvoiceNumber": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "TotalAmount": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "Vat": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "VatHigh": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "VatMedium": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "VatLow": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "CurrencyCode": {
          "description": "Max length: 3 characters",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyRate": {
          "format": "double",
          "description": "Purpose: If currency code is domestic and currency rate isn't included it will be fetched from eAccounting",
          "type": "number"
        },
        "OcrNumber": {
          "description": "Max length: 25 characters",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "Message": {
          "description": "Max length: 25 characters",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplierInvoiceDraftRow"
          }
        },
        "SupplierName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SupplierNumber": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SelfEmployedWithoutFixedAddress": {
          "type": "boolean"
        },
        "AllocationPeriods": {
          "description": "Purpose: Post to /v1/supplierinvoicedrafts/{supplierInvoiceDraftId}/allocationperiods/",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllocationPeriod"
          },
          "readOnly": true
        },
        "Attachments": {
          "$ref": "#/definitions/AttachmentLink"
        }
      }
    },
    "SupplierInvoiceDraftRow": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Purpose: Unique Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "AccountNumber": {
          "format": "int64",
          "minimum": 1,
          "type": "integer"
        },
        "VatCodeId": {
          "format": "uuid",
          "description": "Purpose: Returns the Vat code id from the provided account number",
          "type": "string"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "description": "Source: Get from /v1/costcenters",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "description": "Source: Get from /v1/costcenters",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "description": "Source: Get from /v1/costcenters",
          "type": "string"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveryDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "type": "string"
        },
        "HarvestYear": {
          "format": "int32",
          "description": "Purpose: This feature is for dutch companies only which enabled agriculture support",
          "type": "integer"
        },
        "DebetAmount": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "CreditAmount": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "LineNumber": {
          "format": "int32",
          "description": "Default: 1",
          "type": "integer"
        },
        "TransactionText": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "SupplierInvoice": {
      "required": [
        "SupplierId"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "SupplierId": {
          "format": "uuid",
          "type": "string"
        },
        "BankAccountId": {
          "format": "uuid",
          "type": "string"
        },
        "InvoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "PaymentDate": {
          "format": "date-time",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string"
        },
        "InvoiceNumber": {
          "type": "string"
        },
        "TotalAmount": {
          "format": "double",
          "type": "number"
        },
        "Vat": {
          "format": "double",
          "type": "number"
        },
        "VatHigh": {
          "format": "double",
          "type": "number"
        },
        "VatMedium": {
          "format": "double",
          "type": "number"
        },
        "VatLow": {
          "format": "double",
          "type": "number"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "CurrencyRate": {
          "format": "double",
          "type": "number"
        },
        "OcrNumber": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "PlusGiroNumber": {
          "type": "string"
        },
        "BankGiroNumber": {
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplierInvoiceRow"
          }
        },
        "SupplierName": {
          "type": "string"
        },
        "SupplierNumber": {
          "type": "string"
        },
        "RemainingAmount": {
          "format": "double",
          "type": "number"
        },
        "RemainingAmountInvoiceCurrency": {
          "format": "double",
          "type": "number"
        },
        "VoucherNumber": {
          "type": "string"
        },
        "VoucherId": {
          "format": "uuid",
          "type": "string"
        },
        "CreatedFromDraftId": {
          "format": "uuid",
          "type": "string"
        },
        "SelfEmployedWithoutFixedAddress": {
          "type": "boolean"
        },
        "AllocationPeriods": {
          "description": "Coming soon.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllocationPeriod"
          }
        },
        "Attachments": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "SupplierInvoiceRow": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "AccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "VadCodeId": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        },
        "DeliveryDate": {
          "format": "date-time",
          "type": "string"
        },
        "HarvestYear": {
          "format": "int32",
          "type": "integer"
        },
        "DebetAmount": {
          "format": "double",
          "type": "number"
        },
        "CreditAmount": {
          "format": "double",
          "type": "number"
        },
        "LineNumber": {
          "format": "int32",
          "type": "integer"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        },
        "TransactionText": {
          "type": "string"
        }
      }
    },
    "SupplierListItem": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "SupplierNumber": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "BankgiroNumber": {
          "type": "string"
        },
        "PlusgiroNumber": {
          "type": "string"
        },
        "BankAccountNumber": {
          "type": "string"
        },
        "EmailAddress": {
          "type": "string"
        },
        "CorporateIdentityNumber": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "BankIban": {
          "type": "string"
        },
        "BankBic": {
          "type": "string"
        },
        "BankBban": {
          "type": "string"
        },
        "BankCode": {
          "type": "string"
        },
        "BankCountryCode": {
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Href": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        }
      }
    },
    "Supplier": {
      "required": [
        "Name",
        "TermsOfPaymentId",
        "UsesPaymentReferenceNumbers"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Purpose: Unique Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "SupplierNumber": {
          "description": "Max length: 16 characters. Purpose: Unique identifier. If not provided, eAccounting will provide one",
          "maxLength": 16,
          "minLength": 0,
          "type": "string"
        },
        "Address1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Address2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "AutomaticPaymentService": {
          "description": "Purpose: Indicates if the supplier is paid by an automatic payment service. Supplier invoices to such suppliers will not be sent to the bank via the bank integration\r\nDefault value: false",
          "type": "boolean"
        },
        "SupplierBankAccountNumber": {
          "description": "Max length: 50 characters. Purpose: Only used in norwegian and danish eAccounting for domestic payments",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SupplierBankBban": {
          "description": "Purpose: Used on foreign payments to identify a bankaccount together with Bank Code (SupplierBankCode)\r\nFormat NO: 11 characters, Format DK: 11-14 characters",
          "maxLength": 50,
          "minLength": 0,
          "pattern": "^[a-zA-Z0-9]{1,35}$",
          "type": "string"
        },
        "SupplierBankBic": {
          "description": "Purpose: Used on foreign payments to identify a bankaccount together with IBAN (SupplierBankIban)\r\nFormat: 6 letters followed by 2 or 5 characters (total length 8 or 11)",
          "maxLength": 50,
          "minLength": 0,
          "pattern": "^[a-zA-Z]{6}([a-zA-z0-9]{2}|[a-zA-z0-9]{5})$",
          "type": "string"
        },
        "SupplierBankCode": {
          "description": "Purpose: Used on foreign payments to identify a bankaccount together with BBAN (SupplierBankBban)\r\nFormat: 2 letters followed by at least 3 characters",
          "maxLength": 50,
          "minLength": 0,
          "pattern": "^([a-zA-Z]{2})[a-zA-Z0-9]{3,}$",
          "type": "string"
        },
        "SupplierBankCountryCode": {
          "description": "Max length: 2 characters. Default value: Country of the supplier",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "SupplierBankgiroNumber": {
          "description": "Max length: 10 characters. Purpose: Only used in swedish eAccounting, for swedish suppliers",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "SupplierBankIban": {
          "description": "Purpose: Used on foreign payments to identify a bankaccount together with BIC (SupplierBankBic)\r\nFormat: 2 letters for country code, 2 control digits, 3 characters for bank identification",
          "maxLength": 50,
          "minLength": 0,
          "pattern": "^[a-zA-Z]{2}[0-9]{2}[a-zA-z0-9]{1,}$",
          "type": "string"
        },
        "SupplierBankName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "City": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonEmail": {
          "description": "Max length: 225 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonMobile": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonPhone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CorporateIdentityNumber": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "CountryCode": {
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "CurrencyCode": {
          "description": "Max length: 3 characters. Default value: Currency of the user company",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "EmailAddress": {
          "description": "Max length: 225 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "MobilePhone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Note": {
          "description": "Max length: 400 characters",
          "maxLength": 4000,
          "minLength": 0,
          "type": "string"
        },
        "SupplierPlusgiroNumber": {
          "description": "Max length: 10 characters. Purpose: Only used in swedish eAccounting, for swedish suppliers",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "PostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "Telephone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "TermsOfPaymentId": {
          "format": "uuid",
          "description": "Source: Get from /v1/termsofpayment",
          "type": "string"
        },
        "WwwAddress": {
          "description": "Max length: 255 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "BankFeeCode": {
          "format": "int32",
          "description": "Purpose: Used for foreign payments to determine which party that pays for aditional bank fees",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "PayFromBankAccountId": {
          "format": "uuid",
          "description": "Source: Get from /v1/bankaccounts. Purpose: Used for foreign payments to determine which bankaccount the payment will be from",
          "type": "string"
        },
        "ForeignPaymentCodeId": {
          "format": "uuid",
          "description": "Source: Get from /v1/foreignpaymentcodes. Purpose: Used for categorization of foreign purchases (NO and SE only).",
          "type": "string"
        },
        "UsesPaymentReferenceNumbers": {
          "description": "Purpose: Used if the supplier uses payment reference numbers. (OCR, KID etc.)",
          "type": "boolean"
        },
        "IsActive": {
          "description": "Default: true",
          "type": "boolean"
        },
        "SelfEmployedWithoutFixedAddress": {
          "type": "boolean"
        }
      }
    },
    "Unit": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "Abbreviation": {
          "type": "string"
        }
      }
    },
    "VatCode": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Purpose: Unique Id provided by eAccounting",
          "type": "string",
          "readOnly": true
        },
        "Code": {
          "description": "Returns the VAT code",
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "VatRate": {
          "format": "double",
          "type": "number"
        },
        "RelatedAccounts": {
          "$ref": "#/definitions/RelatedAccounts"
        }
      }
    },
    "RelatedAccounts": {
      "type": "object",
      "properties": {
        "AccountNumber1": {
          "format": "int64",
          "type": "integer"
        },
        "AccountNumber2": {
          "format": "int64",
          "type": "integer"
        },
        "AccountNumber3": {
          "format": "int64",
          "type": "integer"
        }
      }
    }
  }
}