/* tslint:disable */
/* eslint-disable */
/**
 * Visma eAccounting API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ArticleAccountCoding,
    ArticleAccountCodingFromJSON,
    ArticleAccountCodingToJSON,
} from '../models';

export interface ArticleAccountCodingsGetRequest {
    articleAccountCodingId: string;
    vatRateDate?: string;
}

export interface ArticleAccountCodingsListRequest {
    vatRateDate?: string;
}

/**
 * 
 */
export class ArticleAccountCodingsApi extends runtime.BaseAPI {

    /**
     * <p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>
     * Get a specific article account coding based on the Id. Vat rates are on present UTC time. Specify date (yyyy-MM-dd) to get for specific date.
     */
    async articleAccountCodingsGetRaw(requestParameters: ArticleAccountCodingsGetRequest): Promise<runtime.ApiResponse<ArticleAccountCoding>> {
        if (requestParameters.articleAccountCodingId === null || requestParameters.articleAccountCodingId === undefined) {
            throw new runtime.RequiredError('articleAccountCodingId','Required parameter requestParameters.articleAccountCodingId was null or undefined when calling articleAccountCodingsGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.vatRateDate !== undefined) {
            queryParameters['vatRateDate'] = requestParameters.vatRateDate;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/articleaccountcodings/{articleAccountCodingId}`.replace(`{${"articleAccountCodingId"}}`, encodeURIComponent(String(requestParameters.articleAccountCodingId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => ArticleAccountCodingFromJSON(jsonValue));
    }

    /**
     * <p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>
     * Get a specific article account coding based on the Id. Vat rates are on present UTC time. Specify date (yyyy-MM-dd) to get for specific date.
     */
    async articleAccountCodingsGet(requestParameters: ArticleAccountCodingsGetRequest): Promise<ArticleAccountCoding> {
        const response = await this.articleAccountCodingsGetRaw(requestParameters);
        return await response.value();
    }

    /**
     * <p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>
     * Get a list of article account codings. Vat rates are on present UTC time. Specify date (yyyy-MM-dd) to get for specific date.
     */
    async articleAccountCodingsListRaw(requestParameters: ArticleAccountCodingsListRequest): Promise<runtime.ApiResponse<Array<ArticleAccountCoding>>> {
        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.vatRateDate !== undefined) {
            queryParameters['vatRateDate'] = requestParameters.vatRateDate;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/articleaccountcodings`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ArticleAccountCodingFromJSON));
    }

    /**
     * <p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo</b></p>
     * Get a list of article account codings. Vat rates are on present UTC time. Specify date (yyyy-MM-dd) to get for specific date.
     */
    async articleAccountCodingsList(requestParameters: ArticleAccountCodingsListRequest): Promise<Array<ArticleAccountCoding>> {
        const response = await this.articleAccountCodingsListRaw(requestParameters);
        return await response.value();
    }

}
