/* tslint:disable */
/* eslint-disable */
/**
 * Visma eAccounting API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    SupplierInvoice,
    SupplierInvoiceFromJSON,
    SupplierInvoiceToJSON,
} from '../models';

export interface SupplierInvoicesGetRequest {
    supplierInvoiceId: string;
}

export interface SupplierInvoicesListRequest {
    createdFromDraftId?: string;
    changedFromDate?: string;
}

/**
 * 
 */
export class SupplierInvoicesApi extends runtime.BaseAPI {

    /**
     * <p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo</b></p>
     */
    async supplierInvoicesGetRaw(requestParameters: SupplierInvoicesGetRequest): Promise<runtime.ApiResponse<SupplierInvoice>> {
        if (requestParameters.supplierInvoiceId === null || requestParameters.supplierInvoiceId === undefined) {
            throw new runtime.RequiredError('supplierInvoiceId','Required parameter requestParameters.supplierInvoiceId was null or undefined when calling supplierInvoicesGet.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/supplierinvoices/{supplierInvoiceId}`.replace(`{${"supplierInvoiceId"}}`, encodeURIComponent(String(requestParameters.supplierInvoiceId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => SupplierInvoiceFromJSON(jsonValue));
    }

    /**
     * <p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo</b></p>
     */
    async supplierInvoicesGet(requestParameters: SupplierInvoicesGetRequest): Promise<SupplierInvoice> {
        const response = await this.supplierInvoicesGetRaw(requestParameters);
        return await response.value();
    }

    /**
     * <p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo</b></p>
     */
    async supplierInvoicesListRaw(requestParameters: SupplierInvoicesListRequest): Promise<runtime.ApiResponse<Array<SupplierInvoice>>> {
        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.createdFromDraftId !== undefined) {
            queryParameters['createdFromDraftId'] = requestParameters.createdFromDraftId;
        }

        if (requestParameters.changedFromDate !== undefined) {
            queryParameters['changedFromDate'] = requestParameters.changedFromDate;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/supplierinvoices`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(SupplierInvoiceFromJSON));
    }

    /**
     * <p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly</b></p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo</b></p>
     */
    async supplierInvoicesList(requestParameters: SupplierInvoicesListRequest): Promise<Array<SupplierInvoice>> {
        const response = await this.supplierInvoicesListRaw(requestParameters);
        return await response.value();
    }

}
