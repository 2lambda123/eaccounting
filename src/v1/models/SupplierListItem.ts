/* tslint:disable */
/* eslint-disable */
/**
 * Visma eAccounting API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SupplierListItem
 */
export interface SupplierListItem {
    /**
     * 
     * @type {string}
     * @memberof SupplierListItem
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof SupplierListItem
     */
    supplierNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof SupplierListItem
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof SupplierListItem
     */
    bankgiroNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof SupplierListItem
     */
    plusgiroNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof SupplierListItem
     */
    bankAccountNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof SupplierListItem
     */
    emailAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof SupplierListItem
     */
    corporateIdentityNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof SupplierListItem
     */
    countryCode?: string;
    /**
     * 
     * @type {string}
     * @memberof SupplierListItem
     */
    bankIban?: string;
    /**
     * 
     * @type {string}
     * @memberof SupplierListItem
     */
    bankBic?: string;
    /**
     * 
     * @type {string}
     * @memberof SupplierListItem
     */
    bankBban?: string;
    /**
     * 
     * @type {string}
     * @memberof SupplierListItem
     */
    bankCode?: string;
    /**
     * 
     * @type {string}
     * @memberof SupplierListItem
     */
    bankCountryCode?: string;
    /**
     * 
     * @type {Date}
     * @memberof SupplierListItem
     */
    modifiedUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof SupplierListItem
     */
    href?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SupplierListItem
     */
    isActive?: boolean;
}

export function SupplierListItemFromJSON(json: any): SupplierListItem {
    return SupplierListItemFromJSONTyped(json, false);
}

export function SupplierListItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): SupplierListItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'supplierNumber': !exists(json, 'SupplierNumber') ? undefined : json['SupplierNumber'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'bankgiroNumber': !exists(json, 'BankgiroNumber') ? undefined : json['BankgiroNumber'],
        'plusgiroNumber': !exists(json, 'PlusgiroNumber') ? undefined : json['PlusgiroNumber'],
        'bankAccountNumber': !exists(json, 'BankAccountNumber') ? undefined : json['BankAccountNumber'],
        'emailAddress': !exists(json, 'EmailAddress') ? undefined : json['EmailAddress'],
        'corporateIdentityNumber': !exists(json, 'CorporateIdentityNumber') ? undefined : json['CorporateIdentityNumber'],
        'countryCode': !exists(json, 'CountryCode') ? undefined : json['CountryCode'],
        'bankIban': !exists(json, 'BankIban') ? undefined : json['BankIban'],
        'bankBic': !exists(json, 'BankBic') ? undefined : json['BankBic'],
        'bankBban': !exists(json, 'BankBban') ? undefined : json['BankBban'],
        'bankCode': !exists(json, 'BankCode') ? undefined : json['BankCode'],
        'bankCountryCode': !exists(json, 'BankCountryCode') ? undefined : json['BankCountryCode'],
        'modifiedUtc': !exists(json, 'ModifiedUtc') ? undefined : (new Date(json['ModifiedUtc'])),
        'href': !exists(json, 'Href') ? undefined : json['Href'],
        'isActive': !exists(json, 'IsActive') ? undefined : json['IsActive'],
    };
}

export function SupplierListItemToJSON(value?: SupplierListItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'SupplierNumber': value.supplierNumber,
        'Name': value.name,
        'BankgiroNumber': value.bankgiroNumber,
        'PlusgiroNumber': value.plusgiroNumber,
        'BankAccountNumber': value.bankAccountNumber,
        'EmailAddress': value.emailAddress,
        'CorporateIdentityNumber': value.corporateIdentityNumber,
        'CountryCode': value.countryCode,
        'BankIban': value.bankIban,
        'BankBic': value.bankBic,
        'BankBban': value.bankBban,
        'BankCode': value.bankCode,
        'BankCountryCode': value.bankCountryCode,
        'ModifiedUtc': value.modifiedUtc === undefined ? undefined : (value.modifiedUtc.toISOString()),
        'Href': value.href,
        'IsActive': value.isActive,
    };
}


