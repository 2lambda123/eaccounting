/* tslint:disable */
/* eslint-disable */
/**
 * Visma eAccounting API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CustomerInvoiceDraftRow,
    CustomerInvoiceDraftRowFromJSON,
    CustomerInvoiceDraftRowFromJSONTyped,
    CustomerInvoiceDraftRowToJSON,
    SalesDocumentRotRutReductionPerson,
    SalesDocumentRotRutReductionPersonFromJSON,
    SalesDocumentRotRutReductionPersonFromJSONTyped,
    SalesDocumentRotRutReductionPersonToJSON,
} from './';

/**
 * 
 * @export
 * @interface CustomerInvoiceDraft
 */
export interface CustomerInvoiceDraft {
    /**
     * Purpose: Unique Id provided by eAccounting
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    readonly id?: string;
    /**
     * Source: Get from /v1/customerlistitems.
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    customerId: string;
    /**
     * 
     * @type {boolean}
     * @memberof CustomerInvoiceDraft
     */
    isCreditInvoice?: boolean;
    /**
     * 
     * @type {number}
     * @memberof CustomerInvoiceDraft
     */
    rotReducedInvoicingType: CustomerInvoiceDraftRotReducedInvoicingTypeEnum;
    /**
     * Max length: 40 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    rotReducedInvoicingPropertyName?: string;
    /**
     * Max length: 11 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    rotReducedInvoicingOrgNumber?: string;
    /**
     * Format: 2 decimals
     * @type {number}
     * @memberof CustomerInvoiceDraft
     */
    rotReducedInvoicingAmount?: number;
    /**
     * Default: False
     * @type {boolean}
     * @memberof CustomerInvoiceDraft
     */
    rotReducedInvoicingAutomaticDistribution?: boolean;
    /**
     * 
     * @type {number}
     * @memberof CustomerInvoiceDraft
     */
    rotPropertyType?: number;
    /**
     * 
     * @type {number}
     * @memberof CustomerInvoiceDraft
     */
    houseWorkOtherCosts?: number;
    /**
     * 
     * @type {Array<CustomerInvoiceDraftRow>}
     * @memberof CustomerInvoiceDraft
     */
    rows?: Array<CustomerInvoiceDraftRow>;
    /**
     * 
     * @type {Array<SalesDocumentRotRutReductionPerson>}
     * @memberof CustomerInvoiceDraft
     */
    persons?: Array<SalesDocumentRotRutReductionPerson>;
    /**
     * Max length: 100 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    yourReference?: string;
    /**
     * Max length: 100 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    ourReference?: string;
    /**
     * Max length: 50 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    invoiceCustomerName: string;
    /**
     * Max length: 50 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    invoiceAddress1?: string;
    /**
     * Max length: 50 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    invoiceAddress2?: string;
    /**
     * Max length: 10 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    invoicePostalCode: string;
    /**
     * Max length: 50 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    invoiceCity: string;
    /**
     * Max length: 2 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    invoiceCountryCode: string;
    /**
     * Max length: 50 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    deliveryCustomerName?: string;
    /**
     * Max length: 50 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    deliveryAddress1?: string;
    /**
     * Max length: 50 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    deliveryAddress2?: string;
    /**
     * Max length: 10 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    deliveryPostalCode?: string;
    /**
     * Max length: 50 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    deliveryCity?: string;
    /**
     * Max length: 2 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    deliveryCountryCode?: string;
    /**
     * Max length: 50 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    deliveryMethodName?: string;
    /**
     * Max length: 50 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    deliveryTermName?: string;
    /**
     * Max length: 20 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    deliveryMethodCode?: string;
    /**
     * Max length: 20 characters
     * @type {string}
     * @memberof CustomerInvoiceDraft
     */
    deliveryTermCode?: string;
    /**
     * 
     * @type {Date}
     * @memberof CustomerInvoiceDraft
     */
    deliveryDate?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof CustomerInvoiceDraft
     */
    euThirdParty: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CustomerInvoiceDraft
     */
    customerIsPrivatePerson: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CustomerInvoiceDraft
     */
    reverseChargeOnConstructionServices: boolean;
    /**
     * Purpose: If true the unit prices on rows include VAT. The value is set upon creation depending whether "Show prices excl. VAT for private individuals" in company settings is marked or not
     * @type {boolean}
     * @memberof CustomerInvoiceDraft
     */
    readonly includesVat?: boolean;
}

export function CustomerInvoiceDraftFromJSON(json: any): CustomerInvoiceDraft {
    return CustomerInvoiceDraftFromJSONTyped(json, false);
}

export function CustomerInvoiceDraftFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerInvoiceDraft {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'customerId': json['CustomerId'],
        'isCreditInvoice': !exists(json, 'IsCreditInvoice') ? undefined : json['IsCreditInvoice'],
        'rotReducedInvoicingType': json['RotReducedInvoicingType'],
        'rotReducedInvoicingPropertyName': !exists(json, 'RotReducedInvoicingPropertyName') ? undefined : json['RotReducedInvoicingPropertyName'],
        'rotReducedInvoicingOrgNumber': !exists(json, 'RotReducedInvoicingOrgNumber') ? undefined : json['RotReducedInvoicingOrgNumber'],
        'rotReducedInvoicingAmount': !exists(json, 'RotReducedInvoicingAmount') ? undefined : json['RotReducedInvoicingAmount'],
        'rotReducedInvoicingAutomaticDistribution': !exists(json, 'RotReducedInvoicingAutomaticDistribution') ? undefined : json['RotReducedInvoicingAutomaticDistribution'],
        'rotPropertyType': !exists(json, 'RotPropertyType') ? undefined : json['RotPropertyType'],
        'houseWorkOtherCosts': !exists(json, 'HouseWorkOtherCosts') ? undefined : json['HouseWorkOtherCosts'],
        'rows': !exists(json, 'Rows') ? undefined : ((json['Rows'] as Array<any>).map(CustomerInvoiceDraftRowFromJSON)),
        'persons': !exists(json, 'Persons') ? undefined : ((json['Persons'] as Array<any>).map(SalesDocumentRotRutReductionPersonFromJSON)),
        'yourReference': !exists(json, 'YourReference') ? undefined : json['YourReference'],
        'ourReference': !exists(json, 'OurReference') ? undefined : json['OurReference'],
        'invoiceCustomerName': json['InvoiceCustomerName'],
        'invoiceAddress1': !exists(json, 'InvoiceAddress1') ? undefined : json['InvoiceAddress1'],
        'invoiceAddress2': !exists(json, 'InvoiceAddress2') ? undefined : json['InvoiceAddress2'],
        'invoicePostalCode': json['InvoicePostalCode'],
        'invoiceCity': json['InvoiceCity'],
        'invoiceCountryCode': json['InvoiceCountryCode'],
        'deliveryCustomerName': !exists(json, 'DeliveryCustomerName') ? undefined : json['DeliveryCustomerName'],
        'deliveryAddress1': !exists(json, 'DeliveryAddress1') ? undefined : json['DeliveryAddress1'],
        'deliveryAddress2': !exists(json, 'DeliveryAddress2') ? undefined : json['DeliveryAddress2'],
        'deliveryPostalCode': !exists(json, 'DeliveryPostalCode') ? undefined : json['DeliveryPostalCode'],
        'deliveryCity': !exists(json, 'DeliveryCity') ? undefined : json['DeliveryCity'],
        'deliveryCountryCode': !exists(json, 'DeliveryCountryCode') ? undefined : json['DeliveryCountryCode'],
        'deliveryMethodName': !exists(json, 'DeliveryMethodName') ? undefined : json['DeliveryMethodName'],
        'deliveryTermName': !exists(json, 'DeliveryTermName') ? undefined : json['DeliveryTermName'],
        'deliveryMethodCode': !exists(json, 'DeliveryMethodCode') ? undefined : json['DeliveryMethodCode'],
        'deliveryTermCode': !exists(json, 'DeliveryTermCode') ? undefined : json['DeliveryTermCode'],
        'deliveryDate': !exists(json, 'DeliveryDate') ? undefined : (new Date(json['DeliveryDate'])),
        'euThirdParty': json['EuThirdParty'],
        'customerIsPrivatePerson': json['CustomerIsPrivatePerson'],
        'reverseChargeOnConstructionServices': json['ReverseChargeOnConstructionServices'],
        'includesVat': !exists(json, 'IncludesVat') ? undefined : json['IncludesVat'],
    };
}

export function CustomerInvoiceDraftToJSON(value?: CustomerInvoiceDraft | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'CustomerId': value.customerId,
        'IsCreditInvoice': value.isCreditInvoice,
        'RotReducedInvoicingType': value.rotReducedInvoicingType,
        'RotReducedInvoicingPropertyName': value.rotReducedInvoicingPropertyName,
        'RotReducedInvoicingOrgNumber': value.rotReducedInvoicingOrgNumber,
        'RotReducedInvoicingAmount': value.rotReducedInvoicingAmount,
        'RotReducedInvoicingAutomaticDistribution': value.rotReducedInvoicingAutomaticDistribution,
        'RotPropertyType': value.rotPropertyType,
        'HouseWorkOtherCosts': value.houseWorkOtherCosts,
        'Rows': value.rows === undefined ? undefined : ((value.rows as Array<any>).map(CustomerInvoiceDraftRowToJSON)),
        'Persons': value.persons === undefined ? undefined : ((value.persons as Array<any>).map(SalesDocumentRotRutReductionPersonToJSON)),
        'YourReference': value.yourReference,
        'OurReference': value.ourReference,
        'InvoiceCustomerName': value.invoiceCustomerName,
        'InvoiceAddress1': value.invoiceAddress1,
        'InvoiceAddress2': value.invoiceAddress2,
        'InvoicePostalCode': value.invoicePostalCode,
        'InvoiceCity': value.invoiceCity,
        'InvoiceCountryCode': value.invoiceCountryCode,
        'DeliveryCustomerName': value.deliveryCustomerName,
        'DeliveryAddress1': value.deliveryAddress1,
        'DeliveryAddress2': value.deliveryAddress2,
        'DeliveryPostalCode': value.deliveryPostalCode,
        'DeliveryCity': value.deliveryCity,
        'DeliveryCountryCode': value.deliveryCountryCode,
        'DeliveryMethodName': value.deliveryMethodName,
        'DeliveryTermName': value.deliveryTermName,
        'DeliveryMethodCode': value.deliveryMethodCode,
        'DeliveryTermCode': value.deliveryTermCode,
        'DeliveryDate': value.deliveryDate === undefined ? undefined : (value.deliveryDate.toISOString()),
        'EuThirdParty': value.euThirdParty,
        'CustomerIsPrivatePerson': value.customerIsPrivatePerson,
        'ReverseChargeOnConstructionServices': value.reverseChargeOnConstructionServices,
    };
}

/**
* @export
* @enum {string}
*/
export enum CustomerInvoiceDraftRotReducedInvoicingTypeEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1,
    NUMBER_2 = 2
}


