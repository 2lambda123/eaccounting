/* tslint:disable */
/* eslint-disable */
/**
 * Visma eAccounting API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AllocationPeriod,
    AllocationPeriodFromJSON,
    AllocationPeriodFromJSONTyped,
    AllocationPeriodToJSON,
    AttachmentLink,
    AttachmentLinkFromJSON,
    AttachmentLinkFromJSONTyped,
    AttachmentLinkToJSON,
    SupplierInvoiceDraftRow,
    SupplierInvoiceDraftRowFromJSON,
    SupplierInvoiceDraftRowFromJSONTyped,
    SupplierInvoiceDraftRowToJSON,
} from './';

/**
 * 
 * @export
 * @interface SupplierInvoiceDraft
 */
export interface SupplierInvoiceDraft {
    /**
     * Purpose: Unique Id provided by eAccounting
     * @type {string}
     * @memberof SupplierInvoiceDraft
     */
    readonly id?: string;
    /**
     * Source: Get from /v1/supplierlistitems
     * @type {string}
     * @memberof SupplierInvoiceDraft
     */
    supplierId: string;
    /**
     * Source: Get from /v1/bankaccounts
     * @type {string}
     * @memberof SupplierInvoiceDraft
     */
    bankAccountId?: string;
    /**
     * Format: YYYY-MM-DD. Default: Today's date
     * @type {Date}
     * @memberof SupplierInvoiceDraft
     */
    invoiceDate?: Date;
    /**
     * Format: YYYY-MM-DD
     * @type {Date}
     * @memberof SupplierInvoiceDraft
     */
    paymentDate?: Date;
    /**
     * Format: YYYY-MM-DD. Default: Date based on the suppliers Terms of payment
     * @type {Date}
     * @memberof SupplierInvoiceDraft
     */
    dueDate?: Date;
    /**
     * Max length: 50 characters
     * @type {string}
     * @memberof SupplierInvoiceDraft
     */
    invoiceNumber?: string;
    /**
     * Format: Max 2 decimals
     * @type {number}
     * @memberof SupplierInvoiceDraft
     */
    totalAmount?: number;
    /**
     * Format: Max 2 decimals
     * @type {number}
     * @memberof SupplierInvoiceDraft
     */
    vat?: number;
    /**
     * Format: Max 2 decimals
     * @type {number}
     * @memberof SupplierInvoiceDraft
     */
    vatHigh?: number;
    /**
     * Format: Max 2 decimals
     * @type {number}
     * @memberof SupplierInvoiceDraft
     */
    vatMedium?: number;
    /**
     * Format: Max 2 decimals
     * @type {number}
     * @memberof SupplierInvoiceDraft
     */
    vatLow?: number;
    /**
     * 
     * @type {boolean}
     * @memberof SupplierInvoiceDraft
     */
    isCreditInvoice: boolean;
    /**
     * Max length: 3 characters
     * @type {string}
     * @memberof SupplierInvoiceDraft
     */
    currencyCode?: string;
    /**
     * Purpose: If currency code is domestic and currency rate isn't included it will be fetched from eAccounting
     * @type {number}
     * @memberof SupplierInvoiceDraft
     */
    currencyRate?: number;
    /**
     * Max length: 25 characters
     * @type {string}
     * @memberof SupplierInvoiceDraft
     */
    ocrNumber?: string;
    /**
     * Max length: 25 characters
     * @type {string}
     * @memberof SupplierInvoiceDraft
     */
    message?: string;
    /**
     * 
     * @type {Array<SupplierInvoiceDraftRow>}
     * @memberof SupplierInvoiceDraft
     */
    rows: Array<SupplierInvoiceDraftRow>;
    /**
     * Max length: 50 characters
     * @type {string}
     * @memberof SupplierInvoiceDraft
     */
    supplierName?: string;
    /**
     * Max length: 50 characters
     * @type {string}
     * @memberof SupplierInvoiceDraft
     */
    supplierNumber?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SupplierInvoiceDraft
     */
    selfEmployedWithoutFixedAddress?: boolean;
    /**
     * Purpose: Post to /v1/supplierinvoicedrafts/{supplierInvoiceDraftId}/allocationperiods/
     * @type {Array<AllocationPeriod>}
     * @memberof SupplierInvoiceDraft
     */
    readonly allocationPeriods?: Array<AllocationPeriod>;
    /**
     * 
     * @type {AttachmentLink}
     * @memberof SupplierInvoiceDraft
     */
    attachments?: AttachmentLink;
}

export function SupplierInvoiceDraftFromJSON(json: any): SupplierInvoiceDraft {
    return SupplierInvoiceDraftFromJSONTyped(json, false);
}

export function SupplierInvoiceDraftFromJSONTyped(json: any, ignoreDiscriminator: boolean): SupplierInvoiceDraft {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'supplierId': json['SupplierId'],
        'bankAccountId': !exists(json, 'BankAccountId') ? undefined : json['BankAccountId'],
        'invoiceDate': !exists(json, 'InvoiceDate') ? undefined : (new Date(json['InvoiceDate'])),
        'paymentDate': !exists(json, 'PaymentDate') ? undefined : (new Date(json['PaymentDate'])),
        'dueDate': !exists(json, 'DueDate') ? undefined : (new Date(json['DueDate'])),
        'invoiceNumber': !exists(json, 'InvoiceNumber') ? undefined : json['InvoiceNumber'],
        'totalAmount': !exists(json, 'TotalAmount') ? undefined : json['TotalAmount'],
        'vat': !exists(json, 'Vat') ? undefined : json['Vat'],
        'vatHigh': !exists(json, 'VatHigh') ? undefined : json['VatHigh'],
        'vatMedium': !exists(json, 'VatMedium') ? undefined : json['VatMedium'],
        'vatLow': !exists(json, 'VatLow') ? undefined : json['VatLow'],
        'isCreditInvoice': json['IsCreditInvoice'],
        'currencyCode': !exists(json, 'CurrencyCode') ? undefined : json['CurrencyCode'],
        'currencyRate': !exists(json, 'CurrencyRate') ? undefined : json['CurrencyRate'],
        'ocrNumber': !exists(json, 'OcrNumber') ? undefined : json['OcrNumber'],
        'message': !exists(json, 'Message') ? undefined : json['Message'],
        'rows': ((json['Rows'] as Array<any>).map(SupplierInvoiceDraftRowFromJSON)),
        'supplierName': !exists(json, 'SupplierName') ? undefined : json['SupplierName'],
        'supplierNumber': !exists(json, 'SupplierNumber') ? undefined : json['SupplierNumber'],
        'selfEmployedWithoutFixedAddress': !exists(json, 'SelfEmployedWithoutFixedAddress') ? undefined : json['SelfEmployedWithoutFixedAddress'],
        'allocationPeriods': !exists(json, 'AllocationPeriods') ? undefined : ((json['AllocationPeriods'] as Array<any>).map(AllocationPeriodFromJSON)),
        'attachments': !exists(json, 'Attachments') ? undefined : AttachmentLinkFromJSON(json['Attachments']),
    };
}

export function SupplierInvoiceDraftToJSON(value?: SupplierInvoiceDraft | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'SupplierId': value.supplierId,
        'BankAccountId': value.bankAccountId,
        'InvoiceDate': value.invoiceDate === undefined ? undefined : (value.invoiceDate.toISOString()),
        'PaymentDate': value.paymentDate === undefined ? undefined : (value.paymentDate.toISOString()),
        'DueDate': value.dueDate === undefined ? undefined : (value.dueDate.toISOString()),
        'InvoiceNumber': value.invoiceNumber,
        'TotalAmount': value.totalAmount,
        'Vat': value.vat,
        'VatHigh': value.vatHigh,
        'VatMedium': value.vatMedium,
        'VatLow': value.vatLow,
        'IsCreditInvoice': value.isCreditInvoice,
        'CurrencyCode': value.currencyCode,
        'CurrencyRate': value.currencyRate,
        'OcrNumber': value.ocrNumber,
        'Message': value.message,
        'Rows': ((value.rows as Array<any>).map(SupplierInvoiceDraftRowToJSON)),
        'SupplierName': value.supplierName,
        'SupplierNumber': value.supplierNumber,
        'SelfEmployedWithoutFixedAddress': value.selfEmployedWithoutFixedAddress,
        'Attachments': AttachmentLinkToJSON(value.attachments),
    };
}


