/* tslint:disable */
/* eslint-disable */
/**
 * Visma eAccounting API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BankAccount
 */
export interface BankAccount {
    /**
     * 
     * @type {string}
     * @memberof BankAccount
     */
    bank?: string;
    /**
     * 
     * @type {number}
     * @memberof BankAccount
     */
    bankAccountType?: BankAccountBankAccountTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof BankAccount
     */
    bankAccountTypeDescription?: string;
    /**
     * 
     * @type {string}
     * @memberof BankAccount
     */
    bban?: string;
    /**
     * 
     * @type {string}
     * @memberof BankAccount
     */
    iban?: string;
    /**
     * 
     * @type {string}
     * @memberof BankAccount
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof BankAccount
     */
    id?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BankAccount
     */
    isActive?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof BankAccount
     */
    hasActiveBankAgreement?: boolean;
}

export function BankAccountFromJSON(json: any): BankAccount {
    return BankAccountFromJSONTyped(json, false);
}

export function BankAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): BankAccount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bank': !exists(json, 'Bank') ? undefined : json['Bank'],
        'bankAccountType': !exists(json, 'BankAccountType') ? undefined : json['BankAccountType'],
        'bankAccountTypeDescription': !exists(json, 'BankAccountTypeDescription') ? undefined : json['BankAccountTypeDescription'],
        'bban': !exists(json, 'Bban') ? undefined : json['Bban'],
        'iban': !exists(json, 'Iban') ? undefined : json['Iban'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'isActive': !exists(json, 'IsActive') ? undefined : json['IsActive'],
        'hasActiveBankAgreement': !exists(json, 'HasActiveBankAgreement') ? undefined : json['HasActiveBankAgreement'],
    };
}

export function BankAccountToJSON(value?: BankAccount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Bank': value.bank,
        'BankAccountType': value.bankAccountType,
        'BankAccountTypeDescription': value.bankAccountTypeDescription,
        'Bban': value.bban,
        'Iban': value.iban,
        'Name': value.name,
        'Id': value.id,
        'IsActive': value.isActive,
        'HasActiveBankAgreement': value.hasActiveBankAgreement,
    };
}

/**
* @export
* @enum {string}
*/
export enum BankAccountBankAccountTypeEnum {
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3,
    NUMBER_4 = 4,
    NUMBER_5 = 5,
    NUMBER_6 = 6,
    NUMBER_7 = 7,
    NUMBER_8 = 8
}


